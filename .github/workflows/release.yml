name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        

      - name: Run lint
        run:
          echo "Running lint..."
    
          chmod +x gradlew
          ./gradlew clean lintDebug

  unit-test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      
      - name: unit test
        run: |
          echo "Running unit tests..."

      - name: Run tests
        run: chmod +x gradlew && ./gradlew test
        
  instrumentation-test:
    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
       - name: Checkout the code
         uses: actions/checkout@v4
       - name: instrumentation test
         run: |
           echo "Running instrumentation tests..."


    #   - name: Make gradlew executable
    #     run: chmod +x gradlew

    #   - name: Run espresso tests
    #     uses: reactivecircus/android-emulator-runner@v2
    #     with:
    #       api-level: 33
    #       target: google_apis
    #       arch: x86_64
    #       disable-animations: true
    #       script: ./gradlew connectedCheck

          # - name: Upload test report
        #   uses: actions/upload-artifact@v2
        #   with:
        #     name: instrumentation_test_report
        #     path: app/build/reports/androidTests/connected/

  package:
   needs: [instrumentation-test]
   name: Generate APK
   runs-on: ubuntu-latest
   steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: package
        run: |
          echo "Generating APK..."

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Recommended distribution
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: expense-manager.apk
          path: app/build/outputs/apk/debug/app-debug.apk

  deploy:
    needs: package
    name: Distribute for Alpha Testing
    runs-on: ubuntu-latest
    steps:
      - name: Download latest artifact
        uses: actions/download-artifact@v4
        with:
          name: expense-manager.apk

      - name: Set up service account credentials
        run: |
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}" > "${{ github.workspace }}/firebase-key.json"
          export GOOGLE_APPLICATION_CREDENTIALS="${{ github.workspace }}/firebase-key.json"

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Distribute APK to Firebase App Distribution
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS="${{ github.workspace }}/firebase-key.json"
          firebase appdistribution:distribute expense-manager.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups "AlphaTesters" \
            --release-notes "GitHub Actions automated upload for Alpha testing"
